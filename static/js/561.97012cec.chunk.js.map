{"version":3,"file":"static/js/561.97012cec.chunk.js","mappings":"gOACA,EAA0B,sBAA1B,EAAuD,mBAAvD,EAAmF,qB,SCGtEA,EAAO,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAEzBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,eAAGD,UAAWC,EAAd,UAAyBL,EAAzB,KAAiCC,MACjC,mBAAQK,KAAK,SAASF,UAAWC,EAAYE,QAL5B,kBAAML,GAASM,EAAAA,EAAAA,IAAeT,GAA9B,EAKjB,+BAKL,ECjBYU,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SAAnB,EAIrBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,ECHtC,EAAuB,uBCIVC,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,IAAYJ,GAE7B,OACE,eAAIT,UAAWC,EAAf,SACGW,EAASE,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,KAAMlB,EAAb,EAAaA,OAAb,OACZ,yBACE,SAACH,EAAD,CAAMC,GAAIA,EAAIC,KAAMmB,EAAMlB,OAAQA,KAD3BF,EADG,KAQnB,E,6BCjBD,EAAuB,yBAAvB,EAAwD,0BAAxD,EAAgG,gCAAhG,EAAyI,2BCK5HqB,EAAa,WACxB,IAAMlB,GAAWC,EAAAA,EAAAA,MAEXkB,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAEC,iBACIC,EAAOF,EAAEG,cACTN,EAAOK,EAAKE,SAAS1B,KAAK2B,MAC1B1B,EAASuB,EAAKE,SAASzB,OAAO0B,MAEvB,KAATR,GAA0B,KAAXlB,EANA,iCAOXC,GAAS0B,EAAAA,EAAAA,IAAY,CAAET,KAAAA,EAAMlB,OAAAA,KAPlB,cAQjBuB,EAAKK,QACL3B,GAAS4B,EAAAA,EAAAA,OATQ,2BAanBC,MAAM,kEAba,4CAAH,sDAgBlB,OACE,kBAAM3B,UAAWC,EAAU2B,SAAUX,EAArC,WACE,kBACEF,KAAK,OACLb,KAAK,OACLF,UAAWC,EACX4B,YAAY,UAEd,kBACEd,KAAK,SACLb,KAAK,MACLF,UAAWC,EACX4B,YAAY,YAEd,mBAAQ3B,KAAK,SAASF,UAAWC,EAAjC,4BAKL,ECnCc,SAASW,IACtB,IAAMd,GAAWC,EAAAA,EAAAA,MACX+B,GAAYjB,EAAAA,EAAAA,IAAYR,GAI9B,OAHA0B,EAAAA,EAAAA,YAAU,WACRjC,GAAS4B,EAAAA,EAAAA,MACV,GAAE,CAAC5B,KAEF,iCACE,SAACkC,EAAA,EAAD,WACE,gDAEF,SAAChB,EAAD,KACA,yBAAMc,GAAa,4BACnB,SAACnB,EAAD,MAIL,C","sources":["webpack://react-homework-template/./src/components/Task/Task.module.css?22e8","components/Task/Task.jsx","redux/contacts/selectors.jsx","webpack://react-homework-template/./src/components/TaskList/TaskList.module.css?079b","components/TaskList/TaskList.jsx","webpack://react-homework-template/./src/components/TaskEditor/TaskEditor.module.css?47aa","components/TaskEditor/TaskEditor.jsx","Pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Task_wrapper__zvx3s\",\"text\":\"Task_text__IwwM2\",\"button\":\"Task_button__dYLbw\"};","import { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport css from './Task.module.css';\n\nexport const Task = ({ id, text, number }) => {\n \n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContacts(id));\n  \n  return (\n    <div className={css.wrapper}>\n      <p className={css.text}>{text}, {number}</p>\n      <button type=\"button\" className={css.button} onClick={handleDelete}>\n        Delete Contacts\n      </button>\n    </div>\n  );\n};\n","export const selectLoading = state => state.contacts.isloading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TaskList_list__Q1M-x\"};","import { useSelector } from 'react-redux';\nimport { Task } from '../Task/Task';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport css from './TaskList.module.css';\n\nexport const TaskList = () => {\n  const Contacts = useSelector(selectAllContacts);\n// console.log(Contacts)\n  return (\n    <ul className={css.list}>\n      {Contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <Task id={id} text={name} number={number} />\n        </li>\n      ))}  \n    </ul>\n    \n  );\n};\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TaskEditor_form__NXWha\",\"input\":\"TaskEditor_input__WXNoz\",\"inputNumber\":\"TaskEditor_inputNumber__IQh6V\",\"button\":\"TaskEditor_button__qGfcX\"};","import { useDispatch } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\nimport { fetchContacts } from 'redux/contacts/operations'; \n\nimport css from './TaskEditor.module.css';\n\nexport const TaskEditor = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.text.value;\n    const number = form.elements.number.value;\n\n    if (name !== '' && number !== '') {\n      await dispatch(addContacts({ name, number }));\n      form.reset();\n      dispatch(fetchContacts());\n     \n      return;\n    }\n    alert('Name and number cannot be empty. Enter some text and a number!');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        name=\"text\"\n        type=\"text\"\n        className={css.input}\n        placeholder=\"Name\"\n      />\n      <input\n        name=\"number\"\n        type=\"tel\"\n        className={css.inputNumber}\n        placeholder=\"Number\"\n      />\n      <button type=\"submit\" className={css.button}>\n        Add Contacts\n      </button>\n    </form>\n  );\n};\n\n\n\n\n// import { useDispatch } from 'react-redux';\n// import { addContacts } from 'redux/contacts/operations';\n// import css from './TaskEditor.module.css';\n\n// export const TaskEditor = () => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const form = e.currentTarget;\n//     const name = form.elements.text.value;\n//     const number = form.elements.number.value; \n\n//     if (name !== '' && number !== '') { \n//       dispatch(addContacts({ name, number })); \n//       form.reset();\n//       return;\n//     }\n//     alert('Task and number cannot be empty. Enter some text and a number!');\n//   };\n\n//   return (\n//     <form className={css.form} onSubmit={handleSubmit}>\n//       <input name=\"text\" type=\"text\"className={css.input} placeholder=\"Name\" />\n//       <input name=\"number\" type=\"tel\" className={css.inputNumber} placeholder=\"Number\" /> \n//       <button type=\"submit\" className={css.button}>\n//         Add Contacts\n//       </button>\n//     </form>\n//   );\n// };\n\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { TaskList } from 'components/TaskList/TaskList';\nimport { TaskEditor } from 'components/TaskEditor/TaskEditor';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n// import { Task } from 'components/Task/Task';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <TaskEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList />\n      \n    </>\n  );\n}\n\n\n"],"names":["Task","id","text","number","dispatch","useDispatch","className","css","type","onClick","deleteContacts","selectLoading","state","contacts","isloading","selectAllContacts","items","TaskList","Contacts","useSelector","map","name","TaskEditor","handleSubmit","e","preventDefault","form","currentTarget","elements","value","addContacts","reset","fetchContacts","alert","onSubmit","placeholder","isLoading","useEffect","Helmet"],"sourceRoot":""}