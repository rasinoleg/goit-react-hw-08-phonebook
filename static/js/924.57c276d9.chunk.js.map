{"version":3,"file":"static/js/924.57c276d9.chunk.js","mappings":"yOAyEA,EAlEqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAwBjB,OACE,UAAC,EAAAC,KAAD,CAAMC,SAvBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAEfP,GACEQ,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGlCG,SACAC,MAAK,SAAAC,GACJC,EAAAA,OAAAA,QAAA,UAAkBD,EAAsBE,KAAKT,KAA7C,aACD,IACAU,OAAM,WACLF,EAAAA,OAAAA,QAAe,2BAChB,IAEHX,EAAKc,OACN,EAG+BC,aAAa,MAA3C,WACE,UAAC,EAAAC,MAAD,mBAEE,SAAC,EAAAC,MAAD,CACEC,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,yIACNC,YAAY,iBACZC,UAAQ,QAGZ,UAAC,EAAAN,MAAD,oBAEE,SAAC,EAAAC,MAAD,CACEC,KAAK,QACLf,KAAK,QACLgB,QAAQ,2EACRC,MAAM,oLACNC,YAAY,kBACZC,UAAQ,QAGZ,UAAC,EAAAN,MAAD,uBAEE,SAAC,EAAAC,MAAD,CACEC,KAAK,WACLf,KAAK,WACLgB,QAAQ,2CACRC,MAAM,wJACNC,YAAY,qBACZC,UAAQ,QAGZ,SAAC,EAAAC,OAAD,CAAQL,KAAK,SAAb,uBACA,SAAC,EAAAM,WAAD,CAAYC,GAAG,SAAf,kCAGL,ECjED,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.jsx","components/Pages/Register/Register.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\n\nimport { register } from 'redux/auth/operations';\n\nimport { Form, Input, Label, Button, LoggedLink } from './RegisterPage.module';\nimport { Notify } from 'notiflix';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(`${originalPromiseResult.user.name} welcome!`);\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter name ...\"\n          required\n        />\n      </Label>\n      <Label>\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.\"\n          title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n          placeholder=\"Enter email ...\"\n          required\n        />\n      </Label>\n      <Label>\n        Password\n        <Input\n          type=\"password\"\n          name=\"password\"\n          pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n          title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n          placeholder=\"Enter password ...\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Register</Button>\n      <LoggedLink to=\"/login\">Have acount? LogIn</LoggedLink>\n    </Form>\n  );\n};\n\nexport default RegisterForm;","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;"],"names":["dispatch","useDispatch","Form","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","unwrap","then","originalPromiseResult","Notify","user","catch","reset","autoComplete","Label","Input","type","pattern","title","placeholder","required","Button","LoggedLink","to"],"sourceRoot":""}