{"version":3,"file":"static/js/236.0facb2cd.chunk.js","mappings":"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","sources":["redux/auth/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Pages/Contacts/Contacts.module.jsx","components/Modal/Modal.module.jsx","components/Modal/Madal.jsx","components/Pages/Contacts/Contacts.jsx","components/Section/Section.module.jsx","components/Section/Section.jsx"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;","// extracted by mini-css-extract-plugin\nexport default {\"TaskEditor\":\"ContactForm_TaskEditor__map6q\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__c1Ze8\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__8bhcL\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__4LMu9\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__4bMKM\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createContact } from 'redux/contactsOperation';\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n  const handleCreateContact = e => {\n    e.preventDefault();\n    if (name.length === 0 || number.length === 0) {\n      alert('Fields must be filled!');\n      return;\n    }\n    const isContactExists = contacts.some(\n      contact => contact.name === name || contact.number === number\n    );\n    if (isContactExists) {\n      alert('Contact with the same name or number already exists.');\n      return;\n    }\n    const newContact = {\n      name,\n      number,\n    };\n    dispatch(createContact(newContact));\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={styles.TaskEditor} onSubmit={handleCreateContact}>\n      <label className={styles.TaskEditor_label}>\n        Name\n        <input\n          className={styles.TaskEditor_input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={styles.TaskEditor_label}>\n        Number\n        <input\n          className={styles.TaskEditor_input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.TaskEditor_button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  // eslint-disable-next-line no-unused-vars\n  const filterValue = useSelector(state => state.contacts.filter);\n  const handleFilterChange = event => {\n    const newFilterValue = event.target.value;\n    dispatch(setFilter(newFilterValue));\n  };\n  return (\n    <div>\n      Find contacts by name\n      <input type=\"text\" onChange={handleFilterChange} />\n    </div>\n  );\n};\nexport default Filter;\n","import React, { useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchTasks } from 'redux/contactsOperation';\n\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect( () => {\n    dispatch(fetchTasks());\n  }, [dispatch] ) \n\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter.filter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleDeleteContact = useCallback(\n    contactId => {\n      dispatch(deleteContact(contactId));\n    },\n    [dispatch]\n  );\n\n  return (\n    <ul>\n      {filteredContacts.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.number}\n          <button onClick={() => handleDeleteContact(contact.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\nimport { FaUserPlus } from 'react-icons/fa';\n\nexport const AddUserIcon = styled(FaUserPlus)`\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n`;\nexport const ContentPageContainer = styled.div`\n  padding: 38px 48px;\n  height: 100vh;\n\n  border-radius: 32px 32px 0 0;\n  background-color: #f9f9f9;\n`;\nexport const ContactNavWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 28px;\n`;\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 34px;\n\n  margin: 0;\n`;\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border-style: none;\n\n  :placeholder {\n    color: #757575;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n  font-size: 14px;\n\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: fit-content;\n\n  padding: 1.063em 1.5em;\n  margin-left: 28px;\n\n  background-color: #000000;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: rgba(250, 187, 24, 0.1);\n    border: 1px solid #000000;\n    > svg {\n      fill: #000000;\n    }\n  }\n`;","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(138.13deg, #22343c75 25.87%, #1f2e3572 100%);\n  z-index: 1200;\n`;\n\nexport const ModalContent = styled.div`\n  border-radius: 25px;\n  overflow: hidden;\n\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n\n  padding-left: 30px;\n  padding-right: 30px;\n  background-color: #f9f9f9;\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { ModalContent, Overlay } from './Modal.module';\n\nexport const Modal = ({ children, onCloseModal }) => {\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onCloseModal]);\n\n  const handleBackdropClick = ({ target, currentTarget }) => {\n    if (currentTarget === target) {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </Overlay>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func,\n};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchTasks } from 'redux/contactsOperation';\nimport { selectError, selectIsLoading } from 'redux/auth/selectors';\n\nimport { Section } from '../../../components/Section/Section';\nimport ContactForm from '../../../components/ContactForm/ContactForm';\nimport Filter from '../../../components/Filter/Filter';\nimport ContactList from '../../../components/ContactList/ContactList';\nimport {\n  AddUserIcon,\n  Button,\n  ContactNavWrapper,\n  ContentPageContainer,\n  FilterWrapper,\n  Title,\n} from './Contacts.module';\nimport { Modal } from 'components/Modal/Madal';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [isShowModalAddUser, setIsShowModalAddUser] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setIsShowModalAddUser(prev => !prev);\n  };\n\n  return (\n    <ContentPageContainer>\n      <Section>\n        <ContactNavWrapper>\n          <Title>Contacts</Title>\n          <FilterWrapper>\n            <Filter />\n            <Button type=\"button\" onClick={handleOpenModal}>\n              <AddUserIcon />\n              New Contact\n            </Button>\n          </FilterWrapper>\n        </ContactNavWrapper>\n        {isLoading && !error && <b>Request in progress</b>}\n        <ContactList />\n      </Section>\n      {isShowModalAddUser && (\n        <Modal\n          children={\n            <Section title=\"Add New Contact\">\n              <ContactForm onCloseModal={handleOpenModal} />\n            </Section>\n          }\n          onCloseModal={handleOpenModal}\n        ></Modal>\n      )}\n    </ContentPageContainer>\n  );\n};\n\nexport default Contacts;\n\n","import styled from '@emotion/styled';\n\nexport const SectionContainer = styled.section`\n  margin: auto;\n  padding: 26px 0;\n\n  background-color: #f9f9f9;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 34px;\n\n  text-align: center;\n  margin: 0;\n`;","import PropTypes from 'prop-types';\n\nimport { SectionContainer, Title } from './Section.module';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionContainer>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionContainer>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};"],"names":["selectIsLoading","state","contacts","isLoading","selectError","error","dispatch","useDispatch","useSelector","items","useState","name","setName","number","setNumber","handleChange","e","target","value","className","styles","onSubmit","preventDefault","length","some","contact","alert","newContact","createContact","type","onChange","filter","event","newFilterValue","setFilter","useEffect","fetchTasks","filteredContacts","toLowerCase","includes","handleDeleteContact","useCallback","contactId","deleteContact","map","onClick","id","AddUserIcon","styled","FaUserPlus","ContentPageContainer","ContactNavWrapper","Title","FilterWrapper","Button","Overlay","ModalContent","Modal","children","onCloseModal","handleKeydown","code","window","addEventListener","removeEventListener","currentTarget","isShowModalAddUser","setIsShowModalAddUser","handleOpenModal","prev","Section","title","SectionContainer"],"sourceRoot":""}