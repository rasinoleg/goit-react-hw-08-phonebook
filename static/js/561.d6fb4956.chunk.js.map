{"version":3,"file":"static/js/561.d6fb4956.chunk.js","mappings":"gOACA,EAA0B,sBAA1B,EAAuD,mBAAvD,EAAmF,qB,SCGtEA,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACnBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAAyBJ,KACzB,mBAAQK,KAAK,SAASF,UAAWC,EAAYE,QAL5B,kBAAML,GAASM,EAAAA,EAAAA,IAAeR,GAA9B,EAKjB,+BAKL,EChBYS,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SAAnB,EAIrBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,ECHtC,EAAuB,uBCIVC,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,IAAYJ,GAE7B,OADFK,QAAQC,IAAIH,IAER,gBAAIZ,UAAWC,EAAf,UACGW,EAASI,KAAI,gBAAGpB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACZ,yBACE,SAACF,EAAD,CAAMC,GAAIA,EAAIC,KAAMA,KADbD,EADG,KAKd,SAACD,EAAD,MAIL,EClBD,EAAuB,yBAAvB,EAAwD,0BAAxD,EAA2F,2BCG9EsB,EAAa,WACxB,IAAMnB,GAAWC,EAAAA,EAAAA,MAcjB,OACE,kBAAMC,UAAWC,EAAUiB,SAbR,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTzB,EAAOwB,EAAKE,SAAS1B,KAAK2B,MAChC,GAAa,KAAT3B,EAGF,OAFAC,GAAS2B,EAAAA,EAAAA,IAAY5B,SACrBwB,EAAKK,QAGPC,MAAM,yCACP,EAGC,WACE,kBAAOC,KAAK,OAAO5B,UAAWC,KAC9B,mBAAQC,KAAK,SAASF,UAAWC,EAAjC,4BAKL,EClBc,SAASW,IACtB,IAAMd,GAAWC,EAAAA,EAAAA,MACX8B,GAAYhB,EAAAA,EAAAA,IAAYR,GAI9B,OAHAyB,EAAAA,EAAAA,YAAU,WACRhC,GAASiC,EAAAA,EAAAA,MACV,GAAE,CAACjC,KAEF,iCACE,SAACkC,EAAA,EAAD,WACE,gDAEF,SAACf,EAAD,KACA,yBAAMY,GAAa,4BACnB,SAAClB,EAAD,MAIL,C","sources":["webpack://react-homework-template/./src/components/Task/Task.module.css?22e8","components/Task/Task.jsx","redux/contacts/selectors.jsx","webpack://react-homework-template/./src/components/TaskList/TaskList.module.css?079b","components/TaskList/TaskList.jsx","webpack://react-homework-template/./src/components/TaskEditor/TaskEditor.module.css?47aa","components/TaskEditor/TaskEditor.jsx","Pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Task_wrapper__zvx3s\",\"text\":\"Task_text__IwwM2\",\"button\":\"Task_button__dYLbw\"};","import { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport css from './Task.module.css';\n\nexport const Task = ({ id, text }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContacts(id));\n\n  return (\n    <div className={css.wrapper}>\n      <p className={css.text}>{text}</p>\n      <button type=\"button\" className={css.button} onClick={handleDelete}>\n        Delete Contacts\n      </button>\n    </div>\n  );\n};\n","export const selectLoading = state => state.contacts.isloading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TaskList_list__Q1M-x\"};","import { useSelector } from 'react-redux';\nimport { Task } from '../Task/Task';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport css from './TaskList.module.css';\n\nexport const TaskList = () => {\n  const Contacts = useSelector(selectAllContacts);\nconsole.log(Contacts)\n  return (\n    <ul className={css.list}>\n      {Contacts.map(({ id, text }) => (\n        <li key={id}>\n          <Task id={id} text={text} />\n        </li>\n      ))}\n      <Task/>\n    </ul>\n    \n  );\n};\n\n\n\n\n// import { useSelector, useDispatch } from 'react-redux';\n// import { useEffect } from 'react';\n// import { Task } from '../Task/Task';\n// import { selectAllContacts } from 'redux/contacts/selectors';\n// import { fetchContacts } from 'redux/contacts/operations'; \n// import css from './TaskList.module.css';\n\n// export const TaskList = () => {\n//   const Contacts = useSelector(selectAllContacts);\n//   const dispatch = useDispatch(); \n\n//   useEffect(() => {\n    \n//     dispatch(fetchContacts());\n//   }, [dispatch]);\n\n//   console.log(Contacts);\n\n//   return (\n//     <ul className={css.list}>\n//       {Contacts.map(({ id, text }) => (\n//         <li key={id}>\n//           <Task id={id} text={text} />\n//         </li>\n//       ))}\n//     </ul>\n//   );\n// };\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TaskEditor_form__NXWha\",\"input\":\"TaskEditor_input__WXNoz\",\"button\":\"TaskEditor_button__qGfcX\"};","import { useDispatch } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\nimport css from './TaskEditor.module.css';\n\nexport const TaskEditor = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const text = form.elements.text.value;\n    if (text !== '') {\n      dispatch(addContacts(text));\n      form.reset();\n      return;\n    }\n    alert('Task cannot be empty. Enter some text!');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input name=\"text\" className={css.input} />\n      <button type=\"submit\" className={css.button}>\n        Add Contacts\n      </button>\n    </form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { TaskList } from 'components/TaskList/TaskList';\nimport { TaskEditor } from 'components/TaskEditor/TaskEditor';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n// import { Task } from 'components/Task/Task';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <TaskEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList />\n      \n    </>\n  );\n}\n\n\n"],"names":["Task","id","text","dispatch","useDispatch","className","css","type","onClick","deleteContacts","selectLoading","state","contacts","isloading","selectAllContacts","items","TaskList","Contacts","useSelector","console","log","map","TaskEditor","onSubmit","e","preventDefault","form","currentTarget","elements","value","addContacts","reset","alert","name","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}